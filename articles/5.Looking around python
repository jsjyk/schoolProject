1. 파이썬 기초 실습 준비하기
2. 파이썬 기초 문법 따라 해보기
  1.사칙연산
  2.변수에 숫자 대입하고 계산하기
  3.변수에 문자 대입하고 출력하기
  4.조건문 if
  5.반복문 for
  6.반복문 while
  7.함수

파이썬 기초 실습 준비하기
파이썬 프로그래밍 실습을 시작하기 전에 기초적인 것을 준비해 보자.

[시작] 메뉴에서 [프로그램 → Python 3.7 → Python 3.7(32-bit)]을 선택한다.

그러면 다음 화면이 나타난다.

Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>>
위와 같은 창을 파이썬 대화형 인터프리터라고 부른다. 여기서 인터프리터란 사용자가 입력한 소스 코드를 실행하는 환경을 뜻한다.
그렇다면 "대화형"이란 무슨 의미일까? 다음과 같이 간단한 수식을 입력해 보자.

>>> 1 + 1
2
입력에 따른 결괏값이 바로 출력된다. 이렇게 입력과 출력이 번갈아 이어지는 것이 마치 대화하는 것처럼 느껴지기 때문에 파이썬 ‘대화형’ 인터프리터라고 부른다.
대화형 인터프리터를 사용하면 간단한 예제를 풀 때 결과를 바로 확인할 수 있어 학습에 효과적이다.
앞으로 파이썬의 기본적인 내용은 이 창을 사용해 실습할 것이다.

※ 파이썬 대화형 인터프리터를 간단히 파이썬 셸(Python shell)이라고도 부른다.
3개의 꺾은 괄호(>>>)는 프롬프트(prompt)라고 한다.

대화형 인터프리터를 종료할 때는 [Ctrl+Z → Enter] 를 누른다 (유닉스 계열에서는 [Ctrl+D]).
또는 다음의 예와 같이 sys 모듈을 사용하여 종료할 수도 있다.

>>> import sys
>>> sys.exit()
파이썬 기초 문법 따라 해보기
여기에서 소개하는 내용은 나중에 다시 자세하게 다룰 것이니 이해가 되지 않는다고 절망하거나 너무 고심하지 말자.

파이썬 대화형 인터프리터(파이썬 셸)를 실행하여 다음을 직접 입력해 보자.

사칙연산
1 더하기(+) 2는 3이라는 값을 출력해 보자. 보통 계산기 사용하듯 더하기 기호만 넣어 주면 된다.

>>> 1 + 2
3
나눗셈(/)과 곱셈(*) 역시 예상한 대로 결괏값을 보여준다.

>>> 3 / 2.4
1.25
>>> 3 * 9
27
우리가 일반적으로 알고 있는 ÷ 기호나 × 기호가 아닌 것에 주의하자.

변수에 숫자 대입하고 계산하기
>>> a = 1
>>> b = 2
>>> a + b
3
a에 1을, b에 2를 대입한 다음 a와 b를 더하면 3이라는 결괏값을 보여 준다.

변수에 문자 대입하고 출력하기
>>> a = "Python"
>>> print(a)
Python
a 변수에 Python이라는 값을 대입한 다음 print(a)라고 작성하면 a 값을 출력한다.

※ 파이썬은 대소문자를 구별한다. print를 PRINT로 쓰면 정의되지 않았다는 오류 메시지가 나온다.

또는 다음과 같이 print문을 생략하고 변수 이름 a만 입력하여 a의 값을 확인할 수도 있다.

>>> a = "Python"
>>> a
'Python'
조건문 if
다음은 간단한 조건문 if를 사용한 예제이다.

>>> a = 3
>>> if a > 1:
...   print("a is greater than 1")
...
a is greater than 1
앞의 예제는 a가 1보다 크면 "a is greater than 1"이라는 문장을 출력(print)하라는 뜻이다. 위 예제에서 a는 3이므로 1보다 크다.
따라서 두 번째 "..." 이후에 Enter키를 입력하면 if문이 종료되고 a is greater than 1 문장이 출력된다.

※ print문 앞의 '...'은 아직 문장이 끝나지 않았음을 의미한다.

if a > 1: 다음 문장은 Tab 키 또는 Spacebar 키 4개를 이용해 반드시 들여쓰기 한 후에 print("a is greater than 1")이라고 작성해야 한다.
들여쓰기 규칙에 대해서는 03장 제어문에서 자세하게 알아볼 것이다. 바로 뒤에 이어지는 반복문 for, while 예제도 마찬가지로 들여쓰기가 필요하다.

반복문 for
다음은 for를 사용해서 [1, 2, 3] 안의 값을 하나씩 출력하는 것을 보여 주는 예이다.

>>> for a in [1, 2, 3]:
...   print(a)
...
1
2
3
for문을 사용하면 실행해야 할 문장을 여러 번 반복해서 실행시킬 수 있다. 위 예는 대괄호([ ])사이에 있는 값들을 하나씩 출력한다.
위 코드의 의미는 "[1, 2, 3] 리스트의 앞에서부터 하나씩 꺼내어 a 변수에 대입한 후 print(a)를 수행하라"이다.
당연히 a에 차례로 1, 2, 3이라는 값이 대입되며 print(a)에 의해서 그 값이 차례대로 출력된다.

반복문 while
다음은 while을 사용하는 예이다.

>>> i = 0
>>> while i < 3:
...     i=i+1
...     print(i)
...
1
2
3
while이라는 영어 단어는 "~인 동안"이란 뜻이다. for문과 마찬가지로 반복해서 문장을 수행할 수 있도록 해준다.
위 예제는 i 값이 3보다 작은 동안 i=i+1과 print(i)를 수행하라는 말이다. i=i+1이라는 문장은 i의 값을 1씩 더하게 한다.
i 값이 3보다 커지게 되면 while문을 빠져나가게 된다.

함수
파이썬의 함수는 다음과 같은 형태이다.

>>> def add(a, b):
...     return a+b
...
>>> add(3,4)
7
파이썬에서 def는 함수를 만들 때 사용하는 예약어이다. 위 예제는 add 함수를 만들고 그 함수를 어떻게 사용하는지를 보여준다.
add(a, b)에서 a, b는 입력값이고, a+b는 결괏값이다. 즉 3, 4가 입력으로 들어오면 3+4를 수행하고 그 결괏값인 7을 돌려준다.

※ 예약어란 프로그래밍 언어에서 이미 문법적인 용도로 사용하고 있는 단어를 말한다.

이렇게 해서 기초적인 파이썬 문법에 대해서 간략하게 알아보았다.